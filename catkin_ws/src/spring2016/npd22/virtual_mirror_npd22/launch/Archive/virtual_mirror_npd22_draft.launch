<launch>
    <arg name="veh" doc="Name of vehicle. ex: megaman"/>
    <arg name="local" default="false" doc="true for running everything you possibly can on laptop. false for everything running on vehicle."/>
    <arg name="config" default="baseline" doc="Specify a config."/>
    <arg name="param_file_name" default="default" doc="Specify a param file. ex:megaman." />
    
    <arg name="pkg_name" value="virtual_mirror_npd22"/>
    <arg name="node_name" default="virtual_mirror_npd22"/>
    <!-- <arg name="white_balance" default="false" /> -->
    <!-- <arg name="verbose" default="false" /> -->

    <group ns="$(arg veh)">        
        <!-- run local -->
        <node if="$(arg local)" name="virtual_mirror_npd22" pkg="$(arg pkg_name)" type="$(arg node_name).py" output="screen">
            <rosparam command="load" file="$(find duckietown)/config/$(arg config)/virtual_mirror_npd22/$(arg node_name)/$(arg param_file_name).yaml"/>
            <!-- <param name="white_balance" value="$(arg white_balance)"/> -->
            <!-- <param name="verbose" value="$(arg verbose)"/>
        </node>

        <!-- run remote -->
        <include unless="$(arg local)" file="$(find duckietown)/machines"/>
        <node unless="$(arg local)" machine="$(arg veh)" name="virtual_mirror_npd22" pkg="$(arg pkg_name)" type="$(arg node_name).py" output="screen">
            <rosparam command="load" file="$(find duckietown)/config/$(arg config)/virtual_mirror_npd22/$(arg node_name)/$(arg param_file_name).yaml"/>
            <!-- <param name="white_balance" value="$(arg white_balance)"/> -->
            <!-- <param name="verbose" value="$(arg verbose)"/> -->
        </node>
    </group>

    <!-- Publications -->

    <!-- Subscriptions -->

</launch>

<launch>
	<arg name="veh"/>
	<node ns="$(arg veh)" pkg="lab03" type="publisher_node.py" name="publisher_node" output="screen">
	</node>
</launch>
